---
description: 
globs: 
alwaysApply: true
---

# Your rule content

1. **Architecture**
   - Follow BaseEnvironment -> SpecificEnvironment inheritance
   - Use composition over inheritance for features
   - Implement interfaces for interactive elements
   - Keep render loop logic separate from game logic

2. **Version Control**
   - Branch naming: feature/environment-name
   - Commit message format: [AREA]: Description
   - Never commit large binary files
   - Use LFS for 3D models and textures

3. **Dependencies**
   - Three.js is the primary 3D engine
   - Minimize external dependencies
   - Lock dependency versions
   - Document any custom Three.js modifications

4. **Performance Targets**
   - Maintain 60 FPS on mid-range devices
   - Maximum texture size: 2048x2048
   - Polygon budget per scene: 100k triangles
   - Load time under 5 seconds on 4G

5. **Quality Standards**
   - All code must pass ESLint
   - Test coverage > 80%
   - No memory leaks in environment transitions
   - Consistent material system usage

6. **Severance Authenticity**
   - Match show's aesthetic precisely
   - Implement correct room dimensions
   - Use canon color schemes
   - Maintain psychological horror elements

7. **Development Workflow**
   - Use Vitest for testing
   - Implement hot reloading
   - Support debug mode with stats
   - Document all environment configurations

8. **Asset Pipeline**
   - Use GLTF for 3D models
   - Compress textures appropriately
   - Generate mip-maps
   - Implement async loading

9. **Error Handling**
   - Graceful WebGL fallbacks
   - Meaningful error messages
   - Performance degradation handling
   - Resource loading retries

10. **Accessibility**
    - Support keyboard navigation
    - Implement color blind modes
    - Add screen reader descriptions
    - Support reduced motion
